fragment_downloaded_cb({"url": "tutorial/ingester.html#obtaining-metadata", "fragment": "Obtaining metadata \nNow that we have RSS entries we can download the posts and get their metadata such as title author and tags \nTo see the HTML we re dealing with and get a sense of how much cleaning must be done let s get our ingestArticle function to write out some basic metadata from the RSS feed and save a copy of the HTML \nLibingester.util.fetch_html returns a Cheerio object. Cheerio is a library for DOM manipulation without a browser and its interface is the same as jQuery. \nExamining the written out HTML in html html and html shows that this blog has easily available metadata in its header which follows the OpenGraph standard \nWe can quite easily get the metadata using Cheerio \nIn the case of tags things are slightly complicated. Wordpress distinguishes predefined categories and free form tags The data model for offline content that we use here allows tagging content with an array of strings. These tags can be any string and are not visible to users of the app. Later on when we define the content structure for the app we can create a set that is visible in the app s UI. A set includes any number of tags and can be marked featured to make it more prominent in the app or not. You ll learn more about this later in the walkthrough. \nLater on we will make Wordpress categories into featured sets and Wordpress tags non featured. For now we will mark the tag IDs of Wordpress tags with tag and leave the Wordpress categories as is so that we ll know what to do later. \n"});